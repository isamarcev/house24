# Generated by Django 4.1 on 2022-09-10 08:15

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('houses', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users/')),
                ('birthday', models.DateField(auto_now_add=True)),
                ('father_name', models.CharField(help_text='Отчество', max_length=30)),
                ('phone', models.CharField(max_length=20)),
                ('viber', models.CharField(blank=True, max_length=20, null=True)),
                ('telegram', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('Активен', 'Активен'), ('Новый', 'Новый'), ('Отключен', 'Отключен')], default='Активен', max_length=20)),
                ('username', models.CharField(error_messages={'unique': 'A user with that UserID already exists'}, help_text='Required', max_length=100, unique=True, verbose_name='User ID')),
                ('about', models.TextField(blank=True, max_length=1000, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('text', models.TextField(blank=True, max_length=1000, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('sender', models.CharField(max_length=120)),
            ],
            options={
                'verbose_name': 'Сообщение',
                'verbose_name_plural': 'Сообщения',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('statistics', models.BooleanField(null=True)),
                ('cashbox', models.BooleanField(null=True)),
                ('invoice', models.BooleanField(null=True)),
                ('personal_account', models.BooleanField(null=True)),
                ('flat', models.BooleanField(null=True)),
                ('owner', models.BooleanField(null=True)),
                ('house', models.BooleanField(null=True)),
                ('message', models.BooleanField(null=True)),
                ('application', models.BooleanField(null=True)),
                ('meter', models.BooleanField(null=True)),
                ('site_management', models.BooleanField(null=True)),
                ('service', models.BooleanField(null=True)),
                ('tariff', models.BooleanField(null=True)),
                ('role', models.BooleanField(null=True)),
                ('users', models.BooleanField(null=True)),
                ('requisites', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('time', models.TimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, max_length=1999, null=True)),
                ('comment', models.TextField(blank=True, max_length=1000, null=True)),
                ('type_master', models.CharField(choices=[('Сантехник', 'Сантехник'), ('Электрик', 'Электрик'), ('Любой специалист', 'Любой специалист')], default='Сантехник', max_length=50)),
                ('status', models.CharField(choices=[('Новое', 'Новое'), ('В работе', 'В работе'), ('Выполнено', 'Выполнено')], max_length=50)),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='houses.flat')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='owner_transaction', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MessageUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='users.role'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
